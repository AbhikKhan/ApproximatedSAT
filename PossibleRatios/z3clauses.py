import sys
import time
sys.path.append("/home/sukanta/App/z3-master/build")
from z3 import *

s = Optimize()
R_1_1_1, R_1_1_2, R_1_1_3, R_1_1_4  = Ints('R_1_1_1 R_1_1_2 R_1_1_3 R_1_1_4')
r_1_1_1, r_1_1_2, r_1_1_3, r_1_1_4, s_1_1  = Ints('r_1_1_1 r_1_1_2 r_1_1_3 r_1_1_4 s_1_1')# Added reagent variables
R_2_1_1, R_2_1_2, R_2_1_3, R_2_1_4  = Ints('R_2_1_1 R_2_1_2 R_2_1_3 R_2_1_4')
r_2_1_1, r_2_1_2, r_2_1_3, r_2_1_4, s_2_1  = Ints('r_2_1_1 r_2_1_2 r_2_1_3 r_2_1_4 s_2_1')# Added reagent variables
R_2_2_1, R_2_2_2, R_2_2_3, R_2_2_4  = Ints('R_2_2_1 R_2_2_2 R_2_2_3 R_2_2_4')
r_2_2_1, r_2_2_2, r_2_2_3, r_2_2_4, s_2_2  = Ints('r_2_2_1 r_2_2_2 r_2_2_3 r_2_2_4 s_2_2')# Added reagent variables
R_3_1_1, R_3_1_2, R_3_1_3, R_3_1_4  = Ints('R_3_1_1 R_3_1_2 R_3_1_3 R_3_1_4')
r_3_1_1, r_3_1_2, r_3_1_3, r_3_1_4, s_3_1  = Ints('r_3_1_1 r_3_1_2 r_3_1_3 r_3_1_4 s_3_1')# Added reagent variables
R_3_2_1, R_3_2_2, R_3_2_3, R_3_2_4  = Ints('R_3_2_1 R_3_2_2 R_3_2_3 R_3_2_4')
r_3_2_1, r_3_2_2, r_3_2_3, r_3_2_4, s_3_2  = Ints('r_3_2_1 r_3_2_2 r_3_2_3 r_3_2_4 s_3_2')# Added reagent variables
R_4_1_1, R_4_1_2, R_4_1_3, R_4_1_4  = Ints('R_4_1_1 R_4_1_2 R_4_1_3 R_4_1_4')
r_4_1_1, r_4_1_2, r_4_1_3, r_4_1_4, s_4_1  = Ints('r_4_1_1 r_4_1_2 r_4_1_3 r_4_1_4 s_4_1')# Added reagent variables
R_4_2_1, R_4_2_2, R_4_2_3, R_4_2_4  = Ints('R_4_2_1 R_4_2_2 R_4_2_3 R_4_2_4')
r_4_2_1, r_4_2_2, r_4_2_3, r_4_2_4, s_4_2  = Ints('r_4_2_1 r_4_2_2 r_4_2_3 r_4_2_4 s_4_2')# Added reagent variables
w_2_1_1_1, w_2_2_1_1, w_3_1_2_2, w_3_2_2_2, w_4_1_3_2, w_4_2_3_2  = Ints('w_2_1_1_1 w_2_2_1_1 w_3_1_2_2 w_3_2_2_2 w_4_1_3_2 w_4_2_3_2')# Added edgeVariables

t43865 = Int('t43865')
t43866 = Int('t43866')
t43867 = Int('t43867')
t43868 = Int('t43868')
t43869 = Int('t43869')
t43870 = Int('t43870')
t43871 = Int('t43871')
t43872 = Int('t43872')
s.add(64*r_1_1_1 + 16*t43865 + 1*t43866  == R_1_1_1)
s.add(64*r_1_1_2 + 16*t43867 + 1*t43868  == R_1_1_2)
s.add(64*r_1_1_3 + 16*t43869 + 1*t43870  == R_1_1_3)
s.add(64*r_1_1_4 + 16*t43871 + 1*t43872  == R_1_1_4)

s.add(Implies((w_2_1_1_1 == 0), (t43865 == 0)))
s.add(Implies((w_2_1_1_1 == 1), (t43865 == 1*R_2_1_1)))
s.add(Implies((w_2_1_1_1 == 2), (t43865 == 2*R_2_1_1)))
s.add(Implies((w_2_1_1_1 == 3), (t43865 == 3*R_2_1_1)))

s.add(Implies((w_2_2_1_1 == 0), (t43866 == 0)))
s.add(Implies((w_2_2_1_1 == 1), (t43866 == 1*R_2_2_1)))
s.add(Implies((w_2_2_1_1 == 2), (t43866 == 2*R_2_2_1)))
s.add(Implies((w_2_2_1_1 == 3), (t43866 == 3*R_2_2_1)))

s.add(Implies((w_2_1_1_1 == 0), (t43867 == 0)))
s.add(Implies((w_2_1_1_1 == 1), (t43867 == 1*R_2_1_2)))
s.add(Implies((w_2_1_1_1 == 2), (t43867 == 2*R_2_1_2)))
s.add(Implies((w_2_1_1_1 == 3), (t43867 == 3*R_2_1_2)))

s.add(Implies((w_2_2_1_1 == 0), (t43868 == 0)))
s.add(Implies((w_2_2_1_1 == 1), (t43868 == 1*R_2_2_2)))
s.add(Implies((w_2_2_1_1 == 2), (t43868 == 2*R_2_2_2)))
s.add(Implies((w_2_2_1_1 == 3), (t43868 == 3*R_2_2_2)))

s.add(Implies((w_2_1_1_1 == 0), (t43869 == 0)))
s.add(Implies((w_2_1_1_1 == 1), (t43869 == 1*R_2_1_3)))
s.add(Implies((w_2_1_1_1 == 2), (t43869 == 2*R_2_1_3)))
s.add(Implies((w_2_1_1_1 == 3), (t43869 == 3*R_2_1_3)))

s.add(Implies((w_2_2_1_1 == 0), (t43870 == 0)))
s.add(Implies((w_2_2_1_1 == 1), (t43870 == 1*R_2_2_3)))
s.add(Implies((w_2_2_1_1 == 2), (t43870 == 2*R_2_2_3)))
s.add(Implies((w_2_2_1_1 == 3), (t43870 == 3*R_2_2_3)))

s.add(Implies((w_2_1_1_1 == 0), (t43871 == 0)))
s.add(Implies((w_2_1_1_1 == 1), (t43871 == 1*R_2_1_4)))
s.add(Implies((w_2_1_1_1 == 2), (t43871 == 2*R_2_1_4)))
s.add(Implies((w_2_1_1_1 == 3), (t43871 == 3*R_2_1_4)))

s.add(Implies((w_2_2_1_1 == 0), (t43872 == 0)))
s.add(Implies((w_2_2_1_1 == 1), (t43872 == 1*R_2_2_4)))
s.add(Implies((w_2_2_1_1 == 2), (t43872 == 2*R_2_2_4)))
s.add(Implies((w_2_2_1_1 == 3), (t43872 == 3*R_2_2_4)))

s.add(1*r_2_1_1  == R_2_1_1)
s.add(1*r_2_1_2  == R_2_1_2)
s.add(1*r_2_1_3  == R_2_1_3)
s.add(1*r_2_1_4  == R_2_1_4)

t43873 = Int('t43873')
t43874 = Int('t43874')
t43875 = Int('t43875')
t43876 = Int('t43876')
t43877 = Int('t43877')
t43878 = Int('t43878')
t43879 = Int('t43879')
t43880 = Int('t43880')
s.add(16*r_2_2_1 + 4*t43873 + 1*t43874  == R_2_2_1)
s.add(16*r_2_2_2 + 4*t43875 + 1*t43876  == R_2_2_2)
s.add(16*r_2_2_3 + 4*t43877 + 1*t43878  == R_2_2_3)
s.add(16*r_2_2_4 + 4*t43879 + 1*t43880  == R_2_2_4)

s.add(Implies((w_3_1_2_2 == 0), (t43873 == 0)))
s.add(Implies((w_3_1_2_2 == 1), (t43873 == 1*R_3_1_1)))
s.add(Implies((w_3_1_2_2 == 2), (t43873 == 2*R_3_1_1)))
s.add(Implies((w_3_1_2_2 == 3), (t43873 == 3*R_3_1_1)))

s.add(Implies((w_3_2_2_2 == 0), (t43874 == 0)))
s.add(Implies((w_3_2_2_2 == 1), (t43874 == 1*R_3_2_1)))
s.add(Implies((w_3_2_2_2 == 2), (t43874 == 2*R_3_2_1)))
s.add(Implies((w_3_2_2_2 == 3), (t43874 == 3*R_3_2_1)))

s.add(Implies((w_3_1_2_2 == 0), (t43875 == 0)))
s.add(Implies((w_3_1_2_2 == 1), (t43875 == 1*R_3_1_2)))
s.add(Implies((w_3_1_2_2 == 2), (t43875 == 2*R_3_1_2)))
s.add(Implies((w_3_1_2_2 == 3), (t43875 == 3*R_3_1_2)))

s.add(Implies((w_3_2_2_2 == 0), (t43876 == 0)))
s.add(Implies((w_3_2_2_2 == 1), (t43876 == 1*R_3_2_2)))
s.add(Implies((w_3_2_2_2 == 2), (t43876 == 2*R_3_2_2)))
s.add(Implies((w_3_2_2_2 == 3), (t43876 == 3*R_3_2_2)))

s.add(Implies((w_3_1_2_2 == 0), (t43877 == 0)))
s.add(Implies((w_3_1_2_2 == 1), (t43877 == 1*R_3_1_3)))
s.add(Implies((w_3_1_2_2 == 2), (t43877 == 2*R_3_1_3)))
s.add(Implies((w_3_1_2_2 == 3), (t43877 == 3*R_3_1_3)))

s.add(Implies((w_3_2_2_2 == 0), (t43878 == 0)))
s.add(Implies((w_3_2_2_2 == 1), (t43878 == 1*R_3_2_3)))
s.add(Implies((w_3_2_2_2 == 2), (t43878 == 2*R_3_2_3)))
s.add(Implies((w_3_2_2_2 == 3), (t43878 == 3*R_3_2_3)))

s.add(Implies((w_3_1_2_2 == 0), (t43879 == 0)))
s.add(Implies((w_3_1_2_2 == 1), (t43879 == 1*R_3_1_4)))
s.add(Implies((w_3_1_2_2 == 2), (t43879 == 2*R_3_1_4)))
s.add(Implies((w_3_1_2_2 == 3), (t43879 == 3*R_3_1_4)))

s.add(Implies((w_3_2_2_2 == 0), (t43880 == 0)))
s.add(Implies((w_3_2_2_2 == 1), (t43880 == 1*R_3_2_4)))
s.add(Implies((w_3_2_2_2 == 2), (t43880 == 2*R_3_2_4)))
s.add(Implies((w_3_2_2_2 == 3), (t43880 == 3*R_3_2_4)))

s.add(1*r_3_1_1  == R_3_1_1)
s.add(1*r_3_1_2  == R_3_1_2)
s.add(1*r_3_1_3  == R_3_1_3)
s.add(1*r_3_1_4  == R_3_1_4)

t43881 = Int('t43881')
t43882 = Int('t43882')
t43883 = Int('t43883')
t43884 = Int('t43884')
t43885 = Int('t43885')
t43886 = Int('t43886')
t43887 = Int('t43887')
t43888 = Int('t43888')
s.add(4*r_3_2_1 + 1*t43881 + 1*t43882  == R_3_2_1)
s.add(4*r_3_2_2 + 1*t43883 + 1*t43884  == R_3_2_2)
s.add(4*r_3_2_3 + 1*t43885 + 1*t43886  == R_3_2_3)
s.add(4*r_3_2_4 + 1*t43887 + 1*t43888  == R_3_2_4)

s.add(Implies((w_4_1_3_2 == 0), (t43881 == 0)))
s.add(Implies((w_4_1_3_2 == 1), (t43881 == 1*R_4_1_1)))
s.add(Implies((w_4_1_3_2 == 2), (t43881 == 2*R_4_1_1)))
s.add(Implies((w_4_1_3_2 == 3), (t43881 == 3*R_4_1_1)))

s.add(Implies((w_4_2_3_2 == 0), (t43882 == 0)))
s.add(Implies((w_4_2_3_2 == 1), (t43882 == 1*R_4_2_1)))
s.add(Implies((w_4_2_3_2 == 2), (t43882 == 2*R_4_2_1)))
s.add(Implies((w_4_2_3_2 == 3), (t43882 == 3*R_4_2_1)))

s.add(Implies((w_4_1_3_2 == 0), (t43883 == 0)))
s.add(Implies((w_4_1_3_2 == 1), (t43883 == 1*R_4_1_2)))
s.add(Implies((w_4_1_3_2 == 2), (t43883 == 2*R_4_1_2)))
s.add(Implies((w_4_1_3_2 == 3), (t43883 == 3*R_4_1_2)))

s.add(Implies((w_4_2_3_2 == 0), (t43884 == 0)))
s.add(Implies((w_4_2_3_2 == 1), (t43884 == 1*R_4_2_2)))
s.add(Implies((w_4_2_3_2 == 2), (t43884 == 2*R_4_2_2)))
s.add(Implies((w_4_2_3_2 == 3), (t43884 == 3*R_4_2_2)))

s.add(Implies((w_4_1_3_2 == 0), (t43885 == 0)))
s.add(Implies((w_4_1_3_2 == 1), (t43885 == 1*R_4_1_3)))
s.add(Implies((w_4_1_3_2 == 2), (t43885 == 2*R_4_1_3)))
s.add(Implies((w_4_1_3_2 == 3), (t43885 == 3*R_4_1_3)))

s.add(Implies((w_4_2_3_2 == 0), (t43886 == 0)))
s.add(Implies((w_4_2_3_2 == 1), (t43886 == 1*R_4_2_3)))
s.add(Implies((w_4_2_3_2 == 2), (t43886 == 2*R_4_2_3)))
s.add(Implies((w_4_2_3_2 == 3), (t43886 == 3*R_4_2_3)))

s.add(Implies((w_4_1_3_2 == 0), (t43887 == 0)))
s.add(Implies((w_4_1_3_2 == 1), (t43887 == 1*R_4_1_4)))
s.add(Implies((w_4_1_3_2 == 2), (t43887 == 2*R_4_1_4)))
s.add(Implies((w_4_1_3_2 == 3), (t43887 == 3*R_4_1_4)))

s.add(Implies((w_4_2_3_2 == 0), (t43888 == 0)))
s.add(Implies((w_4_2_3_2 == 1), (t43888 == 1*R_4_2_4)))
s.add(Implies((w_4_2_3_2 == 2), (t43888 == 2*R_4_2_4)))
s.add(Implies((w_4_2_3_2 == 3), (t43888 == 3*R_4_2_4)))

s.add(1*r_4_1_1  == R_4_1_1)
s.add(1*r_4_1_2  == R_4_1_2)
s.add(1*r_4_1_3  == R_4_1_3)
s.add(1*r_4_1_4  == R_4_1_4)

s.add(1*r_4_2_1  == R_4_2_1)
s.add(1*r_4_2_2  == R_4_2_2)
s.add(1*r_4_2_3  == R_4_2_3)
s.add(1*r_4_2_4  == R_4_2_4)

s.add(Or(r_1_1_1 + r_1_1_2 + r_1_1_3 + r_1_1_4 + w_2_1_1_1 + w_2_2_1_1  == 4, r_1_1_1 + r_1_1_2 + r_1_1_3 + r_1_1_4 + w_2_1_1_1 + w_2_2_1_1  == 0))
s.add(Or(r_2_1_1 + r_2_1_2 + r_2_1_3 + r_2_1_4  == 4, r_2_1_1 + r_2_1_2 + r_2_1_3 + r_2_1_4  == 0))
s.add(w_2_1_1_1  <= 4)
s.add(Or(r_2_2_1 + r_2_2_2 + r_2_2_3 + r_2_2_4 + w_3_1_2_2 + w_3_2_2_2  == 4, r_2_2_1 + r_2_2_2 + r_2_2_3 + r_2_2_4 + w_3_1_2_2 + w_3_2_2_2  == 0))
s.add(w_2_2_1_1  <= 4)
s.add(Or(r_3_1_1 + r_3_1_2 + r_3_1_3 + r_3_1_4  == 4, r_3_1_1 + r_3_1_2 + r_3_1_3 + r_3_1_4  == 0))
s.add(w_3_1_2_2  <= 4)
s.add(Or(r_3_2_1 + r_3_2_2 + r_3_2_3 + r_3_2_4 + w_4_1_3_2 + w_4_2_3_2  == 4, r_3_2_1 + r_3_2_2 + r_3_2_3 + r_3_2_4 + w_4_1_3_2 + w_4_2_3_2  == 0))
s.add(w_3_2_2_2  <= 4)
s.add(Or(r_4_1_1 + r_4_1_2 + r_4_1_3 + r_4_1_4  == 4, r_4_1_1 + r_4_1_2 + r_4_1_3 + r_4_1_4  == 0))
s.add(w_4_1_3_2  <= 4)
s.add(Or(r_4_2_1 + r_4_2_2 + r_4_2_3 + r_4_2_4  == 4, r_4_2_1 + r_4_2_2 + r_4_2_3 + r_4_2_4  == 0))
s.add(w_4_2_3_2  <= 4)
s.add(And(r_1_1_1 >= 0, r_1_1_1 <= 3, r_1_1_2 >= 0, r_1_1_2 <= 3, r_1_1_3 >= 0, r_1_1_3 <= 3, r_1_1_4 >= 0, r_1_1_4 <= 3))
s.add(And(r_2_1_1 >= 0, r_2_1_1 <= 3, r_2_1_2 >= 0, r_2_1_2 <= 3, r_2_1_3 >= 0, r_2_1_3 <= 3, r_2_1_4 >= 0, r_2_1_4 <= 3))
s.add(And(r_2_2_1 >= 0, r_2_2_1 <= 3, r_2_2_2 >= 0, r_2_2_2 <= 3, r_2_2_3 >= 0, r_2_2_3 <= 3, r_2_2_4 >= 0, r_2_2_4 <= 3))
s.add(And(r_3_1_1 >= 0, r_3_1_1 <= 3, r_3_1_2 >= 0, r_3_1_2 <= 3, r_3_1_3 >= 0, r_3_1_3 <= 3, r_3_1_4 >= 0, r_3_1_4 <= 3))
s.add(And(r_3_2_1 >= 0, r_3_2_1 <= 3, r_3_2_2 >= 0, r_3_2_2 <= 3, r_3_2_3 >= 0, r_3_2_3 <= 3, r_3_2_4 >= 0, r_3_2_4 <= 3))
s.add(And(r_4_1_1 >= 0, r_4_1_1 <= 3, r_4_1_2 >= 0, r_4_1_2 <= 3, r_4_1_3 >= 0, r_4_1_3 <= 3, r_4_1_4 >= 0, r_4_1_4 <= 3))
s.add(And(r_4_2_1 >= 0, r_4_2_1 <= 3, r_4_2_2 >= 0, r_4_2_2 <= 3, r_4_2_3 >= 0, r_4_2_3 <= 3, r_4_2_4 >= 0, r_4_2_4 <= 3))
s.add(And(w_2_1_1_1 >= 0, w_2_1_1_1 <= 3, w_2_2_1_1 >= 0, w_2_2_1_1 <= 3, w_3_1_2_2 >= 0, w_3_1_2_2 <= 3, w_3_2_2_2 >= 0, w_3_2_2_2 <= 3, w_4_1_3_2 >= 0, w_4_1_3_2 <= 3, w_4_2_3_2 >= 0, w_4_2_3_2 <= 3))
s.add(And(R_1_1_1 == 40, R_1_1_2 == 31, R_1_1_3 == 99, R_1_1_4 == 86))


totalReagents = s.minimize(r_1_1_1 + r_1_1_2 + r_1_1_3 + r_1_1_4 + r_2_1_1 + r_2_1_2 + r_2_1_3 + r_2_1_4 + r_2_2_1 + r_2_2_2 + r_2_2_3 + r_2_2_4 + r_3_1_1 + r_3_1_2 + r_3_1_3 + r_3_1_4 + r_3_2_1 + r_3_2_2 + r_3_2_3 + r_3_2_4 + r_4_1_1 + r_4_1_2 + r_4_1_3 + r_4_1_4 + r_4_2_1 + r_4_2_2 + r_4_2_3 + r_4_2_4 )
startTime = time.time()
fp = open('z3opFile','w')
if s.check() == sat:
	print("Total reagents = ", totalReagents.value())
	lst = s.model()
	for i in lst:
	    fp.write(str(i) + " = " + str(s.model()[i]) + '\n')
else:
	fp.write('unsat')
	print('unsat')
endTime = time.time()
executionTime = endTime - startTime
print("Execution Time = ",executionTime)
